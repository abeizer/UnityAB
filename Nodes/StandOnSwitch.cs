/// <auto-generated>
/// This file was generated by the Regression Games Agent Builder.
/// If you modify it and resynchronize with Regression Games, your changes may be lost.
/// Use the Agent Builder on https://regression.gg to modify this file.
/// </auto-generated>

using System;
using System.Collections.Generic;
using System.Linq;
using RegressionGames.BehaviorTree;
using RegressionGames.RGBotLocalRuntime;
using RegressionGames.StateActionTypes;
using UnityEngine;

namespace BossroomAb
{
    public class StandOnSwitch : ActionNode
    {
        public StandOnSwitch() : base("Stand on switch")
        {
        }

        /**
         * Generated from prompt:
         * 
         */
        class LeafNode extends TreeNode {
        	public override async execute(rg): Promise<NodeStatus>{		
        		const floorSwitch = this.getData<any>("floorSwitch");
        
        		// already standing on it
        		if(floorSwitch && await rg.entityHasAttribute(floorSwitch, "isOn", true)) {
        			return NodeStatus.SUCCESS;
        		}
        
        		// otherwise go to it
        		if(floorSwitch && rg.MathFunctions.distanceSq(rg.getBot().position, floorSwitch.position) < 30) {
        			rg.performAction("FollowObject", {
        				targetId: floorSwitch.id,
        				range: 0.1
        			});
        			return NodeStatus.RUNNING;
          	}
        
        		return NodeStatus.FAILURE
        	}
        }
    }
}