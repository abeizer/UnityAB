/// <auto-generated>
/// This file was generated by the Regression Games Agent Builder.
/// If you modify it and resynchronize with Regression Games, your changes may be lost.
/// Use the Agent Builder on https://regression.gg to modify this file.
/// </auto-generated>

using System;
using System.Collections.Generic;
using System.Linq;
using RegressionGames.BehaviorTree;
using RegressionGames.RGBotLocalRuntime;
using RegressionGames.StateActionTypes;
using UnityEngine;

namespace BossroomAb
{
    public class StandOnSwitch : ActionNode
    {
        public StandOnSwitch() : base("Stand on switch")
        {
        }

        /**
         * Generated from prompt:
         * Go stand on the stored "FloorSwitch". If I'm already standing on it then return Running.
         */
        protected override NodeStatus Execute(RG rgObject)
        {
        	var switchEntity = GetData<RGStateEntity>("FloorSwitch");
        	var myPlayer = rgObject.GetMyPlayer();
        
        	if (rgObject.MathFunctions.DistanceSq(myPlayer.position, switchEntity.position) < 0.25)
        	{
        		return NodeStatus.Running;
        	}
        	else
        	{
        		var followAction = new RGActionRequest("FollowObject", new Dictionary<string, object> { { "targetId", switchEntity.id } });
        		rgObject.PerformAction(followAction);
        		return NodeStatus.Success;
        	}
        }
    }
}