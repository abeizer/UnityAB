/// <auto-generated>
/// This file was generated by the Regression Games Agent Builder.
/// If you modify it and resynchronize with Regression Games, your changes may be lost.
/// Use the Agent Builder on https://regression.gg to modify this file.
/// </auto-generated>

using System;
using System.Collections.Generic;
using System.Linq;
using RegressionGames.BehaviorTree;
using RegressionGames.RGBotLocalRuntime;
using RegressionGames.StateActionTypes;
using UnityEngine;

namespace BossroomAb
{
    public class Attack : ActionNode
    {
        public Attack() : base("Attack")
        {
        }

        /**
         * Generated from prompt:
         * Attack the stored "nearestEntity" with skill 0
         */
        protected override NodeStatus Execute(RG rgObject)
        {
        	var nearestEntity = GetData<RGStateEntity>("nearestEntity");
        	if (nearestEntity == null)
        	{
        		return NodeStatus.Failure;
        	}
        
        	var actionParams = new Dictionary<string, object>
        	{
        		{"skillId", 0},
        		{"targetId", nearestEntity.id}
        	};
        
        	rgObject.PerformAction(new RGActionRequest("PerformSkill", actionParams));
        
        	return NodeStatus.Success;
        }
    }
}