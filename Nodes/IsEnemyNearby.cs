/// <auto-generated>
/// This file was generated by the Regression Games Agent Builder.
/// If you modify it and resynchronize with Regression Games, your changes may be lost.
/// Use the Agent Builder on https://regression.gg to modify this file.
/// </auto-generated>

using System;
using System.Collections.Generic;
using System.Linq;
using RegressionGames.BehaviorTree;
using RegressionGames.RGBotLocalRuntime;
using RegressionGames.StateActionTypes;
using UnityEngine;

namespace BossroomAb
{
    public class IsEnemyNearby : ConditionNode
    {
        public IsEnemyNearby() : base("Is enemy nearby?")
        {
        }

        /**
         * Generated from prompt:
         * Find the closest entity that isn't broken on team 1. If it is within 50 meters then store a reference to it
         */
        protected override NodeStatus Execute(RG rgObject)
        {
        	var closestEntity = rgObject.FindNearestEntity(filterFunction: entity => 
        		(int)entity.GetValueOrDefault("team", 0) == 1 && 
        		!(bool)entity.GetValueOrDefault("broken", false));
        		
        	if(closestEntity != null && RG.MathFunctions.DistanceSq(rgObject.GetMyPlayer().position, closestEntity.position) <= 50)
        	{
        		SetData("closestEntity", closestEntity);
        		return NodeStatus.Success;
        	}
        	
        	return NodeStatus.Failure;
        }
    }
}