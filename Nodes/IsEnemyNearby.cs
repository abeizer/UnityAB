/// <auto-generated>
/// This file was generated by the Regression Games Agent Builder.
/// If you modify it and resynchronize with Regression Games, your changes may be lost.
/// Use the Agent Builder on https://regression.gg to modify this file.
/// </auto-generated>

using System;
using System.Collections.Generic;
using System.Linq;
using RegressionGames.BehaviorTree;
using RegressionGames.RGBotLocalRuntime;
using RegressionGames.StateActionTypes;
using UnityEngine;

namespace BossroomAb
{
    public class IsEnemyNearby : ConditionNode
    {
        public IsEnemyNearby() : base("Is enemy nearby?")
        {
        }

        /**
         * Generated from prompt:
         * Find the closest entity that isn't broken (null or false) on team 1 and store a reference to it
         */
        protected override NodeStatus Execute(RG rgObject)
        {
        	var entity = rgObject.FindNearestEntity(filterFunction: e => e.ContainsKey("team") && (int)e["team"] == 1 && (!e.ContainsKey("broken") || !(bool)e["broken"]));
        	if (entity != null)
        	{
        		SetData("entity", entity);
        		return NodeStatus.Success;
        	}
        	else
        	{
        		return NodeStatus.Failure;
        	}
        }
    }
}