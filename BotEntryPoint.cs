/// <auto-generated>
/// This file was generated by the Regression Games Agent Builder.
/// If you modify it and resynchronize with Regression Games, your changes may be lost.
/// Use the Agent Builder on https://regression.gg to modify this file.
/// </auto-generated>

using System.Collections.Generic;
using RegressionGames.BehaviorTree;
using RegressionGames.RGBotLocalRuntime;

namespace BossroomAb
{
    public class BotEntryPoint : RGBehaviorTreeBot
    {
        protected override bool GetIsSpawnable() => true;
        protected override RGBotLifecycle GetBotLifecycle() => RGBotLifecycle.MANAGED;

        private const string CharacterConfig = @"{""characterType"":""Archer""}";

        public override void ConfigureBot(RG rgObject)
        {
            rgObject.SetCharacterConfigFromJson(CharacterConfig);
        }

        protected override RootNode BuildBehaviorTree()
        {
            var floorSwitches = new SequenceNode("Floor switches");
            floorSwitches.AddChild(new IsFloorSwitchInRange());
            floorSwitches.AddChild(new StandOnSwitch());

            var supportHuman = new SequenceNode("Support human");
            supportHuman.AddChild(new IsHumanNearby());
            supportHuman.AddChild(new FollowHuman());

            var attackEnemy = new SequenceNode("Attack enemy");
            attackEnemy.AddChild(new IsEnemyNearby());
            attackEnemy.AddChild(new Attack());

            var chooseAnAction = new SelectorNode("Choose an action");
            chooseAnAction.AddChild(floorSwitches);
            chooseAnAction.AddChild(supportHuman);
            chooseAnAction.AddChild(attackEnemy);

            var topLevelSequenceNode = new SequenceNode("Top Level Sequence Node");
            topLevelSequenceNode.AddChild(new IsInGame());
            topLevelSequenceNode.AddChild(new SetChartype());
            topLevelSequenceNode.AddChild(chooseAnAction);

            var rootNode = new RootNode();
            rootNode.AddChild(topLevelSequenceNode);

            return rootNode;
        }
    }
}